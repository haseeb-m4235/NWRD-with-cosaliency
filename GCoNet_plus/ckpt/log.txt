2024-01-24 03:17:53,223 INFO Model details:
2024-01-24 03:17:53,223 INFO GCoNet_plus(
  (bb): Sequential(
    (conv1): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (7): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (9): ReLU(inplace=True)
      (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): ReLU(inplace=True)
    )
    (conv3): Sequential(
      (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): ReLU(inplace=True)
      (17): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): ReLU(inplace=True)
      (20): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (21): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (22): ReLU(inplace=True)
    )
    (conv4): Sequential(
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (24): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): ReLU(inplace=True)
      (27): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (28): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (29): ReLU(inplace=True)
      (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (31): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (32): ReLU(inplace=True)
    )
    (conv5): Sequential(
      (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (35): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (36): ReLU(inplace=True)
      (37): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (38): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (39): ReLU(inplace=True)
      (40): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (41): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (42): ReLU(inplace=True)
    )
  )
  (top_layer): ResBlk(
    (conv_in): Conv2d(512, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu_in): ReLU(inplace=True)
    (conv_out): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn_in): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn_out): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (enlayer5): ResBlk(
    (conv_in): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu_in): ReLU(inplace=True)
    (conv_out): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn_in): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn_out): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (latlayer5): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
  (enlayer4): ResBlk(
    (conv_in): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu_in): ReLU(inplace=True)
    (conv_out): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn_in): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn_out): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (latlayer4): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
  (enlayer3): ResBlk(
    (conv_in): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu_in): ReLU(inplace=True)
    (conv_out): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn_in): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn_out): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (latlayer3): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
  (enlayer2): ResBlk(
    (conv_in): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu_in): ReLU(inplace=True)
    (conv_out): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn_in): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn_out): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (latlayer2): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
  (enlayer1): ResBlk(
    (conv_in): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu_in): ReLU(inplace=True)
    (conv_out): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bn_in): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn_out): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv_out1): Sequential(
    (0): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (co_x5): CoAttLayer(
    (all_attention): GAM(
      (query_transform): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      (key_transform): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      (conv6): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
    )
    (conv_output): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
    (conv_transform): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
    (fc_transform): Linear(in_features=512, out_features=512, bias=True)
  )
  (pred_layer): half_DSLayer(
    (enlayer): Sequential(
      (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (predlayer): Sequential(
      (0): Conv2d(128, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Linear(in_features=512, out_features=291, bias=True)
  (sgm): Sigmoid()
  (conv_out_mask): Sequential(
    (0): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (db_output_decoder): DBHead(
    (binarize): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
      (7): Sigmoid()
    )
    (thresh): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
      (7): Sigmoid()
    )
  )
)
2024-01-24 03:17:53,223 INFO Optimizer details:
2024-01-24 03:17:53,223 INFO Adam (
Parameter Group 0
    amsgrad: False
    betas: [0.9, 0.99]
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    initial_lr: 0.00016250000000000002
    lr: 0.00016250000000000002
    maximize: False
    weight_decay: 0

Parameter Group 1
    amsgrad: False
    betas: [0.9, 0.99]
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    initial_lr: 1.6250000000000003e-06
    lr: 1.6250000000000003e-06
    maximize: False
    weight_decay: 0
)
2024-01-24 03:17:53,223 INFO Scheduler details:
2024-01-24 03:17:53,223 INFO <torch.optim.lr_scheduler.StepLR object at 0x000001A2E013F5C8>
2024-01-24 03:17:53,223 INFO Other hyperparameters:
2024-01-24 03:17:53,223 INFO Namespace(ckpt_dir='C:\\Users\\hasee\\Desktop\\NWRD  Internship\\FineLine\\codes\\GCoNet_plus\\ckpt', epochs=30, model='GCoNet_plus', resume='C:\\Users\\hasee\\Desktop\\NWRD  Internship\\FineLine\\codes\\GCoNet_plus\\ultimate_duts_cocoseg (The best one).pth', size=180, start_epoch=0, testsets='CoCA+CoSOD3k+CoSal2015', trainset='nwrd', val_dir='tmp4val')
                                                                                                                                                                  2024-01-24 03:18:05,460 INFO Epoch[0/30] Iter[0/96]Train Loss: loss_sal: 85.122, loss_cls: 14.217, loss_cls_mask: 50.343, loss_contrast: 11.375, loss_triplet: 2.268, Loss_total: 161.057 (161.057)  
